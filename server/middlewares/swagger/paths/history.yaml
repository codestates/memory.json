/histories/:placeId:
  post:
    tags:
      - /histories
    summary: 새로운 history를 등록하기 위한 요청을 보냅니다.
    parameters:
      - in: path
        name: placeId
        required: true
        schema:
          type: integer
          minimum: 1
        description: place Id를 입력해야 합니다.
    requestBody:
      description: history 생성 정보가 필요합니다.
      required: true
      content:
        application/json:
          schema:
            properties:
              history_title:
                type: string
              history_content:
                type: string
              history_year:
                type: number
                exmaple: 1980
    responses:
      "201":
        description: history 등록 성공
        content:
          application.json:
            schema:
              type: object
              properties:
                historyInfo:
                  $ref: "../components/historydata.yaml#/historydata"
                photoInfo:
                  $ref: "../components/photodata.yaml#/photodata"
                placeInfo:
                  $ref: "../components/placedata.yaml#/placedata"
      "500":
        $ref: "../components/error.yaml#/internalError"
/histories/:historyId:
  patch:
    tags:
      - /histories
    summary: history를 수정하기 위한 요청을 보냅니다.
    parameters:
      - in: path
        name: historyId
        required: true
        schema:
          type: integer
          minimum: 1
        description: history Id를 입력해야 합니다.
    requestBody:
      description: history 수정 정보가 필요합니다.
      required: true
      content:
        application/json:
          schema:
            properties:
              history_title:
                type: string
              history_content:
                type: string
              history_year:
                type: number
                exmaple: 1980
    responses:
      "201":
        description: history 수정 성공
        content:
          application.json:
            schema:
              type: object
              properties:
                newHistoryInfo:
                  $ref: "../components/historydata.yaml#/historydata"
      "400":
        description: bad request
      "403":
        description: forbidden
      "404":
        description: not found
      "500":
        $ref: "../components/error.yaml#/internalError"
  delete:
    tags:
      - /histories
    summary: history를 삭제하기 위한 요청을 보냅니다.
    parameters:
      - in: path
        name: historyId
        required: true
        schema:
          type: integer
          minimum: 1
        description: history Id를 입력해야 합니다.
    responses:
      "201":
        description: history 삭제 성공
        content:
          application.json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    historyId:
                      type: integer
                message:
                  type: string
                  example: 1001번 히스토리 정보 삭제 성공!
      "401":
        description: unauthorized
      "403":
        description: forbidden
      "404":
        description: not found
      "500":
        $ref: "../components/error.yaml#/internalError"

/histories/place:
  get:
    tags:
      - /histories
    summary: place에 기록되어 있는 history의 목록을 조회하기 위한 요청을 보냅니다.
    parameters:
      - in: path
        name: placeId
        required: true
        schema:
          type: integer
          minimum: 1
        description: place Id를 입력해야 합니다.
    responses:
      "200":
        description: history 목록 조회 성공
        content:
          application.json:
            schema:
              type: object
              properties:
                data:
                  $ref: "../components/historydata.yaml#/historydata"
                message:
                  type: string
      "404":
        description: not found
      "500":
        $ref: "../components/error.yaml#/internalError"

/histories/user:
  get:
    tags:
      - /histories
    summary: user가 작성한 history 목록을 조회합니다.
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
          minimum: 1
        description: user Id를 입력해야 합니다.

    responses:
      "200":
        description: history 목록 조회 성공
        content:
          application.json:
            schema:
              type: object
              properties:
                data:
                  $ref: "../components/historydata.yaml#/historydata"
                message:
                  type: string
      "500":
        $ref: "../components/error.yaml#/internalError"
/histories/favorite:
  get:
    tags:
      - /histories
    summary: user가 좋아요(favorite)한 history의 목록을 조회하기 위한 요청을 보냅니다.
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
          minimum: 1
        description: user Id를 입력해야 합니다.
    responses:
      "200":
        description: history 목록 조회 성공
        content:
          application.json:
            schema:
              type: object
              properties:
                data:
                  $ref: "../components/historydata.yaml#/historydata"
                message:
                  type: string
      "500":
        $ref: "../components/error.yaml#/internalError"
/histories/photo:
  get:
    tags:
      - /histories
    summary: history_id에 포함되어있는 사진을 조회하기 위한 요청을 보냅니다.
    parameters:
      - in: query
        name: historyid
        required: true
        schema:
          type: integer
          minimum: 1
        description: historyid를 입력해야 합니다.
    responses:
      "200":
        description: 사진 목록 조회 성공
        content:
          application.json:
            schema:
              type: object
              properties:
                data:
                  $ref: "../components/photodata.yaml#/photodata"
                message:
                  type: string
      "500":
        $ref: "../components/error.yaml#/internalError"
